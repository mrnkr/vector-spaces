//
//  vector-spaces.hpp
//  vector-spaces
//
//  Created by Alvaro Nicoli on 9/9/17.
//  Copyright © 2017 Mr.NKR. All rights reserved.
//

#ifndef vector_spaces_hpp
#define vector_spaces_hpp

#include <iostream>
#include <stdio.h>
#include <vector>
#include "matrix.hpp"
#include "equation-systems.hpp"

namespace vectorspaces {
    using namespace std;
    using namespace matrix;
    using namespace equationsystems;
    
    // Receives the set to work with and makes the necessary system with a given set of results
    vector<vector<double>> makeSystem(vector<vector<double>> set, vector<double> results);
    
    // To know if a set is linearly independent none of its components can be linear combos of other vectors inside the set
    // To check this the system to solve is the one generated by hanging the vectors and adding an all 0 result column
    // It is going to be compatible, since it is homogenous, however if it is determinated we'll know it is independent
    bool isIndependent(vector<vector<double>> set);
    
    // Will get any set and remove the linear combos present inside it, transforming a dependent set into an independent one
    vector<vector<double>> makeIndependent(vector<vector<double>> set);
    
    // The dimension of a vector space is the amount of vectors that compose its basis
    // In this case, this returns the amount of vectors that compose the independent version of whatever set it gets
    // Whatever set this function gets, such set is going to generate a vector space, it is the dimension of said space that it returns
    int getSpaceDimension(vector<vector<double>> set);
    
    // Returns the factors to multiply each vector in the generator in order to get the passed vector
    // If there are infinite ways to generate the vector that is passed as an arg the set of solutions is going to be
    // equivalent to the number to which the dependent variable has to be subtracted in order to get the independent one.
    // Example:
    //      λ1 + 2λ2 = 3
    //      The function will return 3/2 (1.5)
    //      λ2 = 3/2 - λ1 is the interpretation of the returned value
    // If the set does not generate the vector the function is going to return a vector equal to {-1}
    vector<double> getVectorCoordinates(vector<vector<double>> set, vector<double> theVector);
    
    // Receives two generator sets
    // If the generated vector space then the function returns true
    bool bothGenerateTheSameSet(vector<vector<double>> set1, vector<vector<double>> set2);
}

#endif /* vector_spaces_hpp */
