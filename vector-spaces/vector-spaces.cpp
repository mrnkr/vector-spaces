//
//  vector-spaces.cpp
//  vector-spaces
//
//  Created by Alvaro Nicoli on 9/9/17.
//  Copyright Â© 2017 Mr.NKR. All rights reserved.
//

#include <stdio.h>
#include "vector-spaces.hpp"

namespace vectorspaces {
    vector<vector<double>> makeSystem(vector<vector<double>> set, vector<double> results)
    {
        vector<vector<double>> system;
        set.push_back(results);
        
        for (int i = 0; i < set.size(); ++i)
        {
            for (int j = 0; j < set[i].size(); ++j)
            {
                if (i == 0)
                {
                    system.push_back({});
                }
                
                system[j].push_back(set[i][j]);
            }
        }
        
        return system;
    }
    
    bool isIndependent(vector<vector<double>> set)
    {
        // Store the amount of elements the set is composed of
        int vectorCount = (int) set.size();
        
        // Make the system and simplify it
        vector<vector<double>> system = makeSystem(set, {0, 0, 0});
        system = simplifyMatrix(system);
        
        // Solve the system
        vector<double> systemSolutions = solveSystem(system);
        
        // If the size of the array of solutions is equal to the amount of equations in the original system the set is independent
        return (int) (systemSolutions.size()) == vectorCount;
    }
    
    vector<vector<double>> makeIndependent(vector<vector<double>> set)
    {
        return simplifyMatrix(set);
    }
    
    int getSpaceDimension(vector<vector<double>> set)
    {
        return (int) simplifyMatrix(set).size();
    }
    
    vector<double> getVectorCoordinates(vector<vector<double>> set, vector<double> theVector)
    {
        // Make the system and simplify it
        vector<vector<double>> system = makeSystem(set, theVector);
        system = simplifyMatrix(system);
        
        // Solve the system
        vector<double> systemSolutions = solveSystem(system);
        
        // If the size of the array of solutions is equal to the amount of equations in the simplified system the vector is
        // indeed a part of the generated subspace and the result of the system is equivalent to the factors each vector
        // in the set have to be multiplied by in order to produce it
        if ((int) systemSolutions.size() == (int) system.size())
        {
            return systemSolutions;
        }
        
        // This is what is to be returned if the vector is not generated by the passed set
        return {-1};
    }
    
    bool bothGenerateTheSameSet(vector<vector<double>> set1, vector<vector<double>> set2)
    {
        // Simplify both matrices
        set1 = makeIndependent(set1);
        set2 = makeIndependent(set2);
        
        // If the independent versions of both sets are the same then they generate the same space
        return set1 == set2;
    }
}
